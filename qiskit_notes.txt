##########
# install

conda create -n qiskit_env
conda activate qiskit_env
conda install python
pip install "qiskit[visualization]" qiskit-ibm-runtime jupyter numpy pandas matplotlib

pip install qiskit-aer  # This is essential for running simulations locally, as it provides the high-performance Qiskit simulator backend. With Aer, you can efficiently simulate QFT circuits.
pip install qiskit-nature
pip install qiskit-algorithms
pip install pyscf






# other packages just in case
pip install seaborn scipy
pip install scikit-learn
pip install ipython


##########
# old


# web
https://qiskit.github.io/qiskit-aer/tutorials/1_aer_provider.html   # Aer
https://learning.quantum.ibm.com/catalog/tutorials?category=workflow-example  # IBM workflow tutorials
https://aws.amazon.com/braket/pricing  # pricing with a hardware type
https://us-east-1.console.aws.amazon.com/braket/home?region=us-east-1#/devices/arn:aws:braket:eu-west-2::device/qpu/oqc/Lucy  # Lucy
https://us-east-1.console.aws.amazon.com/braket/home?region=us-east-1#/devices/arn:aws:braket:us-east-1::device/qpu/ionq/Harmony  # Harmony

# install
pip install --upgrade qiskit
pip install --upgrade qiskit-ibm-runtime
pip install --upgrade 'qiskit[visualization]'
pip install --upgrade qiskit-braket-provider

